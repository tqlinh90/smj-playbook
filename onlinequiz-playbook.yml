- hosts: all # You can also specify an IP address
  become: true
  vars: # Define new variables
    secret_name: "prod/heyhiassessment"
#    BUDDY_EXECUTION_REVISION_SHOR: buddy
#    container_name: online_quiz
  tasks:
    - block:
      - name: Get running image
        shell: docker ps | grep sj-onlinequiz | awk '{print $2}'
        register: old_image    
      - name: remove image
        ansible.builtin.shell:
          cmd: echo y | docker system prune -a
      # - name: Update apt cache
      #   apt:
      #     update_cache: yes
      # - name: Install jq
      #   apt:
      #     name: jq
      #     state: present
      # - name: Install curl
      #   apt:
      #     name: curl
      #     state: present          
      - name: log in
        ansible.builtin.shell:
          cmd: aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 799941573255.dkr.ecr.ap-southeast-1.amazonaws.com/sj-onlinequiz          
      - name: Run script to generate .env file
        shell: |
          curl -o get_env.sh https://raw.githubusercontent.com/tqlinh90/smj-playbook/refs/heads/main/get_env.sh 
          chmod +x get_env.sh
          export SECRET_NAME="{{ secret_name }}"
          bash get_env.sh
          mv -f .env /etc/stg-sj-onlinequiz/
         
      # - name: remove container
      #   ansible.builtin.shell:
      #     cmd: docker stop "{{container_name}}" || true && docker rm "{{container_name}}" || true  
      - name: remove and run container
        ansible.builtin.shell:
          cmd: "{{ item }}"   
        with_items:
          - docker stop "{{container_name}}" || true && docker rm "{{container_name}}" || true  
          - docker run -d --name "{{container_name}}" --restart=always -v /etc/stg-sj-onlinequiz/.env:/var/www/html/.env -v /var/www/stg-sj-onlinequiz/html/storage:/var/www/html/storage:rw -v /var/www/stg-sj-onlinequiz/html/cache:/var/www/html/bootstrap/cache:rw -p 81:80 799941573255.dkr.ecr.ap-southeast-1.amazonaws.com/sj-onlinequiz:"{{ BUDDY_EXECUTION_REVISION_SHOR }}"
      - name: remove and run queue container
        ansible.builtin.shell:
          cmd: "{{ item }}"   
        with_items:
          - docker stop "{{container_name}}_queue" || true && docker rm "{{container_name}}_queue" || true     
          - docker run -d --name "{{container_name}}_queue" --restart=always -v /etc/stg-sj-onlinequiz/.env:/var/www/html/.env -v /var/www/stg-sj-onlinequiz/html/storage:/var/www/html/storage:rw -v /var/www/stg-sj-onlinequiz/html/cache:/var/www/html/bootstrap/cache:rw 799941573255.dkr.ecr.ap-southeast-1.amazonaws.com/sj-onlinequiz:"{{ BUDDY_EXECUTION_REVISION_SHOR }}" php artisan queue:work          
                            
      # - name: remove queue container
      #   ansible.builtin.shell:
      #     cmd: docker stop "{{container_name}}_queue" || true && docker rm "{{container_name}}_queue" || true               
      # - name: run container
      #   ansible.builtin.shell:
      #     cmd: docker run -d --name "{{container_name}}" --restart=always -v /etc/stg-sj-onlinequiz/.env:/var/www/html/.env -v /var/www/stg-sj-onlinequiz/html/storage:/var/www/html/storage:rw -v /var/www/stg-sj-onlinequiz/html/cache:/var/www/html/bootstrap/cache:rw -p 81:80 799941573255.dkr.ecr.ap-southeast-1.amazonaws.com/sj-onlinequiz:"{{ BUDDY_EXECUTION_REVISION_SHOR }}"
      - name: run config clear 
        ansible.builtin.shell:
          cmd: docker exec -it {{container_name}} php artisan config:clear      
        
      - name: run optimize  
        ansible.builtin.shell:
          cmd: docker exec -it {{container_name}} php artisan optimize      
      # - name: run container queue
      #   ansible.builtin.shell:
      #     cmd: docker run -d --name "{{container_name}}_queue" --restart=always -v /etc/stg-sj-onlinequiz/.env:/var/www/html/.env -v /var/www/stg-sj-onlinequiz/html/storage:/var/www/html/storage:rw -v /var/www/stg-sj-onlinequiz/html/cache:/var/www/html/bootstrap/cache:rw 799941573255.dkr.ecr.ap-southeast-1.amazonaws.com/sj-onlinequiz:"{{ BUDDY_EXECUTION_REVISION_SHOR }}" php artisan queue:work          
      - name: run migrate 
        ansible.builtin.shell:
          cmd: docker exec -it {{container_name}} php artisan migrate --database="{{ item }}" --force
        loop:   
          - "mysql"
          - "vivan"
          - "viva"
          - "ep"
          - "sam"
          - "saas_heyhi"  
        ignore_errors: yes  
      rescue:
        - name: remove container
          ansible.builtin.shell:
            cmd: docker stop "{{container_name}}" || true && docker rm "{{container_name}}" || true        
        - name: rerun older image
          ansible.builtin.shell:
            cmd: docker run -d --name "{{container_name}}" --restart=always -v /etc/stg-sj-onlinequiz/.env:/var/www/html/.env -v /var/www/stg-sj-onlinequiz/html/storage:/var/www/html/storage:rw -v /var/www/stg-sj-onlinequiz/html/cache:/var/www/html/bootstrap/cache:rw -p 81:80 $old_image
