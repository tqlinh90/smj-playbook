- hosts: all # You can also specify an IP address
  become: true
  vars: # Define new variables
    github_user: ""
    github_token: ""
    github_repo_url: https://{{ github_user }}:{{ github_token }}@github.com/smartjen/{{ repo_name }}.git
    temp_directory: /tmp/html
    beta_directory: /var/www/beta/
  tasks:
    - name: up code to server
      ansible.builtin.copy:
        src: ./code.zip
        dest: /tmp/
#         remote_src: yes
#         force: yes
    - name: Unarchive a file that is already on the remote machine
      ansible.builtin.unarchive:
        src: /tmp/code.zip
        dest: "{{ temp_directory }}"
        remote_src: yes
#     - name: Ansible delete old code
#       file:
#         path: "{{ temp_directory }}"
#         state: absent
#     - name: "Pull changes from GitHub"
#       git:
#         repo: "{{ github_repo_url }}" # This is how we can make this step reusable across projects
#         dest: "{{ temp_directory }}"
#         version: master # Branch to pull
#         force: yes
#         accept_hostkey: yes
#       register: repo # Store the result of this task in a variable
#     - name: Ansible delete follow git ignore
#       file:
#         path: "{{ item }}"
#         state: absent
#       with_items:
#         - "{{ temp_directory }}/.git"
#         - "{{ temp_directory }}/.htaccess"
#         - "{{ temp_directory }}/node_modules"
#         - "{{ temp_directory }}/system"
#         - "{{ temp_directory }}/application/config"
#         - "{{ temp_directory }}/application/models/Model_config.php"
#         - "{{ temp_directory }}/img"
#         - "{{ temp_directory }}/application/vendor/vendor"
#         - "{{ temp_directory }}/uploaded_file"

    - name: Copy file with owner and permissions
      command: cp -rf "{{ temp_directory }}" "{{ beta_directory }}"
      # ansible.builtin.copy:
      #   src: "{{ temp_directory }}"
      #   dest: "{{ beta_directory }}"
      #   remote_src: yes
      #   force: yes
      when: repo.changed
    - name: run compose install on application folder
      command: /usr/bin/composer install
      args:
        chdir: "{{ beta_directory }}/html/application"
    - name: run compose update on application folder
      command: /usr/bin/composer update
      args:
        chdir: "{{ beta_directory }}/html/application"
    - name: Reload service httpd, in all cases
      ansible.builtin.service:
        name: apache2
        state: reloaded
   
